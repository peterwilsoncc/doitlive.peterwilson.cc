{"version":3,"file":"./build/preferences/index.min.js","mappings":"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","sources":["webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"data\"]","webpack://wp/external window [\"wp\",\"components\"]","webpack://wp/external window [\"wp\",\"i18n\"]","webpack://wp/external window [\"wp\",\"primitives\"]","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/check.js","webpack://wp/external window [\"wp\",\"a11y\"]","webpack://wp/./packages/preferences/build-module/store/@wordpress/preferences/src/store/reducer.js","webpack://wp/./packages/preferences/build-module/store/@wordpress/preferences/src/store/actions.js","webpack://wp/./packages/preferences/build-module/store/@wordpress/preferences/src/store/selectors.js","webpack://wp/./packages/preferences/build-module/store/@wordpress/preferences/src/store/constants.js","webpack://wp/./packages/preferences/build-module/store/@wordpress/preferences/src/store/index.js","webpack://wp/./packages/preferences/build-module/components/preference-toggle-menu-item/@wordpress/preferences/src/components/preference-toggle-menu-item/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"primitives\"];","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst check = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M16.7 7.1l-6.3 8.5-3.3-2.5-.9 1.2 4.5 3.4L17.9 8z\" />\n\t</SVG>\n);\n\nexport default check;\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"a11y\"];","/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Reducer returning the defaults for user preferences.\n *\n * This is kept intentionally separate from the preferences\n * themselves so that defaults are not persisted.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function defaults( state = {}, action ) {\n\tif ( action.type === 'SET_PREFERENCE_DEFAULTS' ) {\n\t\tconst { scope, defaults: values } = action;\n\t\treturn {\n\t\t\t...state,\n\t\t\t[ scope ]: {\n\t\t\t\t...state[ scope ],\n\t\t\t\t...values,\n\t\t\t},\n\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer returning the user preferences.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function preferences( state = {}, action ) {\n\tif ( action.type === 'SET_PREFERENCE_VALUE' ) {\n\t\tconst { scope, name, value } = action;\n\t\treturn {\n\t\t\t...state,\n\t\t\t[ scope ]: {\n\t\t\t\t...state[ scope ],\n\t\t\t\t[ name ]: value,\n\t\t\t},\n\t\t};\n\t}\n\n\treturn state;\n}\n\nexport default combineReducers( {\n\tdefaults,\n\tpreferences,\n} );\n","/**\n * Returns an action object used in signalling that a preference should be\n * toggled.\n *\n * @param {string} scope The preference scope (e.g. core/edit-post).\n * @param {string} name  The preference name.\n */\nexport function toggle( scope, name ) {\n\treturn function ( { select, dispatch } ) {\n\t\tconst currentValue = select.get( scope, name );\n\t\tdispatch.set( scope, name, ! currentValue );\n\t};\n}\n\n/**\n * Returns an action object used in signalling that a preference should be set\n * to a value\n *\n * @param {string} scope The preference scope (e.g. core/edit-post).\n * @param {string} name  The preference name.\n * @param {*}      value The value to set.\n *\n * @return {Object} Action object.\n */\nexport function set( scope, name, value ) {\n\treturn {\n\t\ttype: 'SET_PREFERENCE_VALUE',\n\t\tscope,\n\t\tname,\n\t\tvalue,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that preference defaults should\n * be set.\n *\n * @param {string}            scope    The preference scope (e.g. core/edit-post).\n * @param {Object<string, *>} defaults A key/value map of preference names to values.\n *\n * @return {Object} Action object.\n */\nexport function setDefaults( scope, defaults ) {\n\treturn {\n\t\ttype: 'SET_PREFERENCE_DEFAULTS',\n\t\tscope,\n\t\tdefaults,\n\t};\n}\n","/**\n * Returns a boolean indicating whether a prefer is active for a particular\n * scope.\n *\n * @param {Object} state The store state.\n * @param {string} scope The scope of the feature (e.g. core/edit-post).\n * @param {string} name  The name of the feature.\n *\n * @return {*} Is the feature enabled?\n */\nexport function get( state, scope, name ) {\n\tconst value = state.preferences[ scope ]?.[ name ];\n\treturn value ?? state.defaults[ scope ]?.[ name ];\n}\n","/**\n * The identifier for the data store.\n *\n * @type {string}\n */\nexport const STORE_NAME = 'core/preferences';\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, registerStore } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as actions from './actions';\nimport * as selectors from './selectors';\nimport { STORE_NAME } from './constants';\n\n/**\n * Store definition for the interface namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\treducer,\n\tactions,\n\tselectors,\n\tpersist: [ 'preferences' ],\n} );\n\n// Once we build a more generic persistence plugin that works across types of stores\n// we'd be able to replace this with a register call.\nregisterStore( STORE_NAME, {\n\treducer,\n\tactions,\n\tselectors,\n\tpersist: [ 'preferences' ],\n} );\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { MenuItem } from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { check } from '@wordpress/icons';\nimport { speak } from '@wordpress/a11y';\n\n/**\n * Internal dependencies\n */\nimport { store as preferencesStore } from '../../store';\n\nexport default function PreferenceToggleMenuItem( {\n\tscope,\n\tname,\n\tlabel,\n\tinfo,\n\tmessageActivated,\n\tmessageDeactivated,\n\tshortcut,\n} ) {\n\tconst isActive = useSelect(\n\t\t( select ) => !! select( preferencesStore ).get( scope, name ),\n\t\t[ name ]\n\t);\n\tconst { toggle } = useDispatch( preferencesStore );\n\tconst speakMessage = () => {\n\t\tif ( isActive ) {\n\t\t\tconst message =\n\t\t\t\tmessageDeactivated ||\n\t\t\t\tsprintf(\n\t\t\t\t\t/* translators: %s: preference name, e.g. 'Fullscreen mode' */\n\t\t\t\t\t__( 'Preference deactivated - %s' ),\n\t\t\t\t\tlabel\n\t\t\t\t);\n\t\t\tspeak( message );\n\t\t} else {\n\t\t\tconst message =\n\t\t\t\tmessageActivated ||\n\t\t\t\tsprintf(\n\t\t\t\t\t/* translators: %s: preference name, e.g. 'Fullscreen mode' */\n\t\t\t\t\t__( 'Preference activated - %s' ),\n\t\t\t\t\tlabel\n\t\t\t\t);\n\t\t\tspeak( message );\n\t\t}\n\t};\n\n\treturn (\n\t\t<MenuItem\n\t\t\ticon={ isActive && check }\n\t\t\tisSelected={ isActive }\n\t\t\tonClick={ () => {\n\t\t\t\ttoggle( scope, name );\n\t\t\t\tspeakMessage();\n\t\t\t} }\n\t\t\trole=\"menuitemcheckbox\"\n\t\t\tinfo={ info }\n\t\t\tshortcut={ shortcut }\n\t\t>\n\t\t\t{ label }\n\t\t</MenuItem>\n\t);\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","window","SVG","xmlns","viewBox","Path","d","combineReducers","defaults","state","action","type","scope","values","preferences","name","toggle","select","dispatch","currentValue","set","setDefaults","STORE_NAME","store","createReduxStore","reducer","actions","selectors","persist","PreferenceToggleMenuItem","label","info","messageActivated","messageDeactivated","shortcut","isActive","useSelect","preferencesStore","useDispatch","MenuItem","icon","check","isSelected","onClick","message","sprintf","__","speak","speakMessage","role","registerStore"],"sourceRoot":""}