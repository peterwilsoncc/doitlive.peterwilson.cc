{"version":3,"file":"./build/annotations/index.min.js","mappings":"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","sources":["webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/external window [\"wp\",\"richText\"]","webpack://wp/external window [\"wp\",\"i18n\"]","webpack://wp/./packages/annotations/build-module/store/@wordpress/annotations/src/store/constants.js","webpack://wp/./packages/annotations/build-module/format/@wordpress/annotations/src/format/annotation.js","webpack://wp/./packages/annotations/build-module/format/@wordpress/annotations/src/format/index.js","webpack://wp/external window [\"wp\",\"hooks\"]","webpack://wp/external window [\"wp\",\"data\"]","webpack://wp/./packages/annotations/build-module/block/@wordpress/annotations/src/block/index.js","webpack://wp/external window \"lodash\"","webpack://wp/./packages/annotations/build-module/store/@wordpress/annotations/src/store/reducer.js","webpack://wp/./node_modules/rememo/es/rememo.js","webpack://wp/./packages/annotations/build-module/store/@wordpress/annotations/src/store/selectors.js","webpack://wp/./node_modules/uuid/dist/esm-browser/rng.js","webpack://wp/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://wp/./node_modules/uuid/dist/esm-browser/regex.js","webpack://wp/./node_modules/uuid/dist/esm-browser/validate.js","webpack://wp/./node_modules/uuid/dist/esm-browser/v4.js","webpack://wp/./packages/annotations/build-module/store/@wordpress/annotations/src/store/actions.js","webpack://wp/./packages/annotations/build-module/store/@wordpress/annotations/src/store/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"richText\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","/**\n * The identifier for the data store.\n *\n * @type {string}\n */\nexport const STORE_NAME = 'core/annotations';\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { applyFormat, removeFormat } from '@wordpress/rich-text';\n\nconst FORMAT_NAME = 'core/annotation';\n\nconst ANNOTATION_ATTRIBUTE_PREFIX = 'annotation-text-';\n/**\n * Internal dependencies\n */\nimport { STORE_NAME } from '../store/constants';\n\n/**\n * Applies given annotations to the given record.\n *\n * @param {Object} record      The record to apply annotations to.\n * @param {Array}  annotations The annotation to apply.\n * @return {Object} A record with the annotations applied.\n */\nexport function applyAnnotations( record, annotations = [] ) {\n\tannotations.forEach( ( annotation ) => {\n\t\tlet { start, end } = annotation;\n\n\t\tif ( start > record.text.length ) {\n\t\t\tstart = record.text.length;\n\t\t}\n\n\t\tif ( end > record.text.length ) {\n\t\t\tend = record.text.length;\n\t\t}\n\n\t\tconst className = ANNOTATION_ATTRIBUTE_PREFIX + annotation.source;\n\t\tconst id = ANNOTATION_ATTRIBUTE_PREFIX + annotation.id;\n\n\t\trecord = applyFormat(\n\t\t\trecord,\n\t\t\t{\n\t\t\t\ttype: FORMAT_NAME,\n\t\t\t\tattributes: {\n\t\t\t\t\tclassName,\n\t\t\t\t\tid,\n\t\t\t\t},\n\t\t\t},\n\t\t\tstart,\n\t\t\tend\n\t\t);\n\t} );\n\n\treturn record;\n}\n\n/**\n * Removes annotations from the given record.\n *\n * @param {Object} record Record to remove annotations from.\n * @return {Object} The cleaned record.\n */\nexport function removeAnnotations( record ) {\n\treturn removeFormat( record, 'core/annotation', 0, record.text.length );\n}\n\n/**\n * Retrieves the positions of annotations inside an array of formats.\n *\n * @param {Array} formats Formats with annotations in there.\n * @return {Object} ID keyed positions of annotations.\n */\nfunction retrieveAnnotationPositions( formats ) {\n\tconst positions = {};\n\n\tformats.forEach( ( characterFormats, i ) => {\n\t\tcharacterFormats = characterFormats || [];\n\t\tcharacterFormats = characterFormats.filter(\n\t\t\t( format ) => format.type === FORMAT_NAME\n\t\t);\n\t\tcharacterFormats.forEach( ( format ) => {\n\t\t\tlet { id } = format.attributes;\n\t\t\tid = id.replace( ANNOTATION_ATTRIBUTE_PREFIX, '' );\n\n\t\t\tif ( ! positions.hasOwnProperty( id ) ) {\n\t\t\t\tpositions[ id ] = {\n\t\t\t\t\tstart: i,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Annotations refer to positions between characters.\n\t\t\t// Formats refer to the character themselves.\n\t\t\t// So we need to adjust for that here.\n\t\t\tpositions[ id ].end = i + 1;\n\t\t} );\n\t} );\n\n\treturn positions;\n}\n\n/**\n * Updates annotations in the state based on positions retrieved from RichText.\n *\n * @param {Array}    annotations                   The annotations that are currently applied.\n * @param {Array}    positions                     The current positions of the given annotations.\n * @param {Object}   actions\n * @param {Function} actions.removeAnnotation      Function to remove an annotation from the state.\n * @param {Function} actions.updateAnnotationRange Function to update an annotation range in the state.\n */\nfunction updateAnnotationsWithPositions(\n\tannotations,\n\tpositions,\n\t{ removeAnnotation, updateAnnotationRange }\n) {\n\tannotations.forEach( ( currentAnnotation ) => {\n\t\tconst position = positions[ currentAnnotation.id ];\n\t\t// If we cannot find an annotation, delete it.\n\t\tif ( ! position ) {\n\t\t\t// Apparently the annotation has been removed, so remove it from the state:\n\t\t\t// Remove...\n\t\t\tremoveAnnotation( currentAnnotation.id );\n\t\t\treturn;\n\t\t}\n\n\t\tconst { start, end } = currentAnnotation;\n\t\tif ( start !== position.start || end !== position.end ) {\n\t\t\tupdateAnnotationRange(\n\t\t\t\tcurrentAnnotation.id,\n\t\t\t\tposition.start,\n\t\t\t\tposition.end\n\t\t\t);\n\t\t}\n\t} );\n}\n\nexport const annotation = {\n\tname: FORMAT_NAME,\n\ttitle: __( 'Annotation' ),\n\ttagName: 'mark',\n\tclassName: 'annotation-text',\n\tattributes: {\n\t\tclassName: 'class',\n\t\tid: 'id',\n\t},\n\tedit() {\n\t\treturn null;\n\t},\n\t__experimentalGetPropsForEditableTreePreparation(\n\t\tselect,\n\t\t{ richTextIdentifier, blockClientId }\n\t) {\n\t\treturn {\n\t\t\tannotations: select(\n\t\t\t\tSTORE_NAME\n\t\t\t).__experimentalGetAnnotationsForRichText(\n\t\t\t\tblockClientId,\n\t\t\t\trichTextIdentifier\n\t\t\t),\n\t\t};\n\t},\n\t__experimentalCreatePrepareEditableTree( { annotations } ) {\n\t\treturn ( formats, text ) => {\n\t\t\tif ( annotations.length === 0 ) {\n\t\t\t\treturn formats;\n\t\t\t}\n\n\t\t\tlet record = { formats, text };\n\t\t\trecord = applyAnnotations( record, annotations );\n\t\t\treturn record.formats;\n\t\t};\n\t},\n\t__experimentalGetPropsForEditableTreeChangeHandler( dispatch ) {\n\t\treturn {\n\t\t\tremoveAnnotation: dispatch( STORE_NAME )\n\t\t\t\t.__experimentalRemoveAnnotation,\n\t\t\tupdateAnnotationRange: dispatch( STORE_NAME )\n\t\t\t\t.__experimentalUpdateAnnotationRange,\n\t\t};\n\t},\n\t__experimentalCreateOnChangeEditableValue( props ) {\n\t\treturn ( formats ) => {\n\t\t\tconst positions = retrieveAnnotationPositions( formats );\n\t\t\tconst {\n\t\t\t\tremoveAnnotation,\n\t\t\t\tupdateAnnotationRange,\n\t\t\t\tannotations,\n\t\t\t} = props;\n\n\t\t\tupdateAnnotationsWithPositions( annotations, positions, {\n\t\t\t\tremoveAnnotation,\n\t\t\t\tupdateAnnotationRange,\n\t\t\t} );\n\t\t};\n\t},\n};\n","/**\n * WordPress dependencies\n */\nimport { registerFormatType } from '@wordpress/rich-text';\n\n/**\n * Internal dependencies\n */\nimport { annotation } from './annotation';\n\nconst { name, ...settings } = annotation;\n\nregisterFormatType( name, settings );\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"hooks\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\nimport { withSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME } from '../store/constants';\n/**\n * Adds annotation className to the block-list-block component.\n *\n * @param {Object} OriginalComponent The original BlockListBlock component.\n * @return {Object} The enhanced component.\n */\nconst addAnnotationClassName = ( OriginalComponent ) => {\n\treturn withSelect( ( select, { clientId, className } ) => {\n\t\tconst annotations = select(\n\t\t\tSTORE_NAME\n\t\t).__experimentalGetAnnotationsForBlock( clientId );\n\n\t\treturn {\n\t\t\tclassName: annotations\n\t\t\t\t.map( ( annotation ) => {\n\t\t\t\t\treturn 'is-annotated-by-' + annotation.source;\n\t\t\t\t} )\n\t\t\t\t.concat( className )\n\t\t\t\t.filter( Boolean )\n\t\t\t\t.join( ' ' ),\n\t\t};\n\t} )( OriginalComponent );\n};\n\naddFilter(\n\t'editor.BlockListBlock',\n\t'core/annotations',\n\taddAnnotationClassName\n);\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"lodash\"];","/**\n * External dependencies\n */\nimport { isNumber, mapValues } from 'lodash';\n\n/**\n * Filters an array based on the predicate, but keeps the reference the same if\n * the array hasn't changed.\n *\n * @param {Array}    collection The collection to filter.\n * @param {Function} predicate  Function that determines if the item should stay\n *                              in the array.\n * @return {Array} Filtered array.\n */\nfunction filterWithReference( collection, predicate ) {\n\tconst filteredCollection = collection.filter( predicate );\n\n\treturn collection.length === filteredCollection.length\n\t\t? collection\n\t\t: filteredCollection;\n}\n\n/**\n * Verifies whether the given annotations is a valid annotation.\n *\n * @param {Object} annotation The annotation to verify.\n * @return {boolean} Whether the given annotation is valid.\n */\nfunction isValidAnnotationRange( annotation ) {\n\treturn (\n\t\tisNumber( annotation.start ) &&\n\t\tisNumber( annotation.end ) &&\n\t\tannotation.start <= annotation.end\n\t);\n}\n\n/**\n * Reducer managing annotations.\n *\n * @param {Object} state  The annotations currently shown in the editor.\n * @param {Object} action Dispatched action.\n *\n * @return {Array} Updated state.\n */\nexport function annotations( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ANNOTATION_ADD':\n\t\t\tconst blockClientId = action.blockClientId;\n\t\t\tconst newAnnotation = {\n\t\t\t\tid: action.id,\n\t\t\t\tblockClientId,\n\t\t\t\trichTextIdentifier: action.richTextIdentifier,\n\t\t\t\tsource: action.source,\n\t\t\t\tselector: action.selector,\n\t\t\t\trange: action.range,\n\t\t\t};\n\n\t\t\tif (\n\t\t\t\tnewAnnotation.selector === 'range' &&\n\t\t\t\t! isValidAnnotationRange( newAnnotation.range )\n\t\t\t) {\n\t\t\t\treturn state;\n\t\t\t}\n\n\t\t\tconst previousAnnotationsForBlock = state?.[ blockClientId ] ?? [];\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ blockClientId ]: [\n\t\t\t\t\t...previousAnnotationsForBlock,\n\t\t\t\t\tnewAnnotation,\n\t\t\t\t],\n\t\t\t};\n\n\t\tcase 'ANNOTATION_REMOVE':\n\t\t\treturn mapValues( state, ( annotationsForBlock ) => {\n\t\t\t\treturn filterWithReference(\n\t\t\t\t\tannotationsForBlock,\n\t\t\t\t\t( annotation ) => {\n\t\t\t\t\t\treturn annotation.id !== action.annotationId;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} );\n\n\t\tcase 'ANNOTATION_UPDATE_RANGE':\n\t\t\treturn mapValues( state, ( annotationsForBlock ) => {\n\t\t\t\tlet hasChangedRange = false;\n\n\t\t\t\tconst newAnnotations = annotationsForBlock.map(\n\t\t\t\t\t( annotation ) => {\n\t\t\t\t\t\tif ( annotation.id === action.annotationId ) {\n\t\t\t\t\t\t\thasChangedRange = true;\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...annotation,\n\t\t\t\t\t\t\t\trange: {\n\t\t\t\t\t\t\t\t\tstart: action.start,\n\t\t\t\t\t\t\t\t\tend: action.end,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn annotation;\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\treturn hasChangedRange ? newAnnotations : annotationsForBlock;\n\t\t\t} );\n\n\t\tcase 'ANNOTATION_REMOVE_SOURCE':\n\t\t\treturn mapValues( state, ( annotationsForBlock ) => {\n\t\t\t\treturn filterWithReference(\n\t\t\t\t\tannotationsForBlock,\n\t\t\t\t\t( annotation ) => {\n\t\t\t\t\t\treturn annotation.source !== action.source;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} );\n\t}\n\n\treturn state;\n}\n\nexport default annotations;\n","'use strict';\n\nvar LEAF_KEY, hasWeakMap;\n\n/**\n * Arbitrary value used as key for referencing cache object in WeakMap tree.\n *\n * @type {Object}\n */\nLEAF_KEY = {};\n\n/**\n * Whether environment supports WeakMap.\n *\n * @type {boolean}\n */\nhasWeakMap = typeof WeakMap !== 'undefined';\n\n/**\n * Returns the first argument as the sole entry in an array.\n *\n * @param {*} value Value to return.\n *\n * @return {Array} Value returned as entry in array.\n */\nfunction arrayOf( value ) {\n\treturn [ value ];\n}\n\n/**\n * Returns true if the value passed is object-like, or false otherwise. A value\n * is object-like if it can support property assignment, e.g. object or array.\n *\n * @param {*} value Value to test.\n *\n * @return {boolean} Whether value is object-like.\n */\nfunction isObjectLike( value ) {\n\treturn !! value && 'object' === typeof value;\n}\n\n/**\n * Creates and returns a new cache object.\n *\n * @return {Object} Cache object.\n */\nfunction createCache() {\n\tvar cache = {\n\t\tclear: function() {\n\t\t\tcache.head = null;\n\t\t},\n\t};\n\n\treturn cache;\n}\n\n/**\n * Returns true if entries within the two arrays are strictly equal by\n * reference from a starting index.\n *\n * @param {Array}  a         First array.\n * @param {Array}  b         Second array.\n * @param {number} fromIndex Index from which to start comparison.\n *\n * @return {boolean} Whether arrays are shallowly equal.\n */\nfunction isShallowEqual( a, b, fromIndex ) {\n\tvar i;\n\n\tif ( a.length !== b.length ) {\n\t\treturn false;\n\t}\n\n\tfor ( i = fromIndex; i < a.length; i++ ) {\n\t\tif ( a[ i ] !== b[ i ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Returns a memoized selector function. The getDependants function argument is\n * called before the memoized selector and is expected to return an immutable\n * reference or array of references on which the selector depends for computing\n * its own return value. The memoize cache is preserved only as long as those\n * dependant references remain the same. If getDependants returns a different\n * reference(s), the cache is cleared and the selector value regenerated.\n *\n * @param {Function} selector      Selector function.\n * @param {Function} getDependants Dependant getter returning an immutable\n *                                 reference or array of reference used in\n *                                 cache bust consideration.\n *\n * @return {Function} Memoized selector.\n */\nexport default function( selector, getDependants ) {\n\tvar rootCache, getCache;\n\n\t// Use object source as dependant if getter not provided\n\tif ( ! getDependants ) {\n\t\tgetDependants = arrayOf;\n\t}\n\n\t/**\n\t * Returns the root cache. If WeakMap is supported, this is assigned to the\n\t * root WeakMap cache set, otherwise it is a shared instance of the default\n\t * cache object.\n\t *\n\t * @return {(WeakMap|Object)} Root cache object.\n\t */\n\tfunction getRootCache() {\n\t\treturn rootCache;\n\t}\n\n\t/**\n\t * Returns the cache for a given dependants array. When possible, a WeakMap\n\t * will be used to create a unique cache for each set of dependants. This\n\t * is feasible due to the nature of WeakMap in allowing garbage collection\n\t * to occur on entries where the key object is no longer referenced. Since\n\t * WeakMap requires the key to be an object, this is only possible when the\n\t * dependant is object-like. The root cache is created as a hierarchy where\n\t * each top-level key is the first entry in a dependants set, the value a\n\t * WeakMap where each key is the next dependant, and so on. This continues\n\t * so long as the dependants are object-like. If no dependants are object-\n\t * like, then the cache is shared across all invocations.\n\t *\n\t * @see isObjectLike\n\t *\n\t * @param {Array} dependants Selector dependants.\n\t *\n\t * @return {Object} Cache object.\n\t */\n\tfunction getWeakMapCache( dependants ) {\n\t\tvar caches = rootCache,\n\t\t\tisUniqueByDependants = true,\n\t\t\ti, dependant, map, cache;\n\n\t\tfor ( i = 0; i < dependants.length; i++ ) {\n\t\t\tdependant = dependants[ i ];\n\n\t\t\t// Can only compose WeakMap from object-like key.\n\t\t\tif ( ! isObjectLike( dependant ) ) {\n\t\t\t\tisUniqueByDependants = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Does current segment of cache already have a WeakMap?\n\t\t\tif ( caches.has( dependant ) ) {\n\t\t\t\t// Traverse into nested WeakMap.\n\t\t\t\tcaches = caches.get( dependant );\n\t\t\t} else {\n\t\t\t\t// Create, set, and traverse into a new one.\n\t\t\t\tmap = new WeakMap();\n\t\t\t\tcaches.set( dependant, map );\n\t\t\t\tcaches = map;\n\t\t\t}\n\t\t}\n\n\t\t// We use an arbitrary (but consistent) object as key for the last item\n\t\t// in the WeakMap to serve as our running cache.\n\t\tif ( ! caches.has( LEAF_KEY ) ) {\n\t\t\tcache = createCache();\n\t\t\tcache.isUniqueByDependants = isUniqueByDependants;\n\t\t\tcaches.set( LEAF_KEY, cache );\n\t\t}\n\n\t\treturn caches.get( LEAF_KEY );\n\t}\n\n\t// Assign cache handler by availability of WeakMap\n\tgetCache = hasWeakMap ? getWeakMapCache : getRootCache;\n\n\t/**\n\t * Resets root memoization cache.\n\t */\n\tfunction clear() {\n\t\trootCache = hasWeakMap ? new WeakMap() : createCache();\n\t}\n\n\t// eslint-disable-next-line jsdoc/check-param-names\n\t/**\n\t * The augmented selector call, considering first whether dependants have\n\t * changed before passing it to underlying memoize function.\n\t *\n\t * @param {Object} source    Source object for derivation.\n\t * @param {...*}   extraArgs Additional arguments to pass to selector.\n\t *\n\t * @return {*} Selector result.\n\t */\n\tfunction callSelector( /* source, ...extraArgs */ ) {\n\t\tvar len = arguments.length,\n\t\t\tcache, node, i, args, dependants;\n\n\t\t// Create copy of arguments (avoid leaking deoptimization).\n\t\targs = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tdependants = getDependants.apply( null, args );\n\t\tcache = getCache( dependants );\n\n\t\t// If not guaranteed uniqueness by dependants (primitive type or lack\n\t\t// of WeakMap support), shallow compare against last dependants and, if\n\t\t// references have changed, destroy cache to recalculate result.\n\t\tif ( ! cache.isUniqueByDependants ) {\n\t\t\tif ( cache.lastDependants && ! isShallowEqual( dependants, cache.lastDependants, 0 ) ) {\n\t\t\t\tcache.clear();\n\t\t\t}\n\n\t\t\tcache.lastDependants = dependants;\n\t\t}\n\n\t\tnode = cache.head;\n\t\twhile ( node ) {\n\t\t\t// Check whether node arguments match arguments\n\t\t\tif ( ! isShallowEqual( node.args, args, 1 ) ) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif ( node !== cache.head ) {\n\t\t\t\t// Adjust siblings to point to each other.\n\t\t\t\tnode.prev.next = node.next;\n\t\t\t\tif ( node.next ) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = cache.head;\n\t\t\t\tnode.prev = null;\n\t\t\t\tcache.head.prev = node;\n\t\t\t\tcache.head = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\tnode = {\n\t\t\t// Generate the result from original function\n\t\t\tval: selector.apply( null, args ),\n\t\t};\n\n\t\t// Avoid including the source object in the cache.\n\t\targs[ 0 ] = null;\n\t\tnode.args = args;\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif ( cache.head ) {\n\t\t\tcache.head.prev = node;\n\t\t\tnode.next = cache.head;\n\t\t}\n\n\t\tcache.head = node;\n\n\t\treturn node.val;\n\t}\n\n\tcallSelector.getDependants = getDependants;\n\tcallSelector.clear = clear;\n\tclear();\n\n\treturn callSelector;\n}\n","/**\n * External dependencies\n */\nimport createSelector from 'rememo';\nimport { flatMap } from 'lodash';\n\n/**\n * Shared reference to an empty array for cases where it is important to avoid\n * returning a new array reference on every invocation, as in a connected or\n * other pure component which performs `shouldComponentUpdate` check on props.\n * This should be used as a last resort, since the normalized data should be\n * maintained by the reducer result in state.\n *\n * @type {Array}\n */\nconst EMPTY_ARRAY = [];\n\n/**\n * Returns the annotations for a specific client ID.\n *\n * @param {Object} state    Editor state.\n * @param {string} clientId The ID of the block to get the annotations for.\n *\n * @return {Array} The annotations applicable to this block.\n */\nexport const __experimentalGetAnnotationsForBlock = createSelector(\n\t( state, blockClientId ) => {\n\t\treturn ( state?.[ blockClientId ] ?? [] ).filter( ( annotation ) => {\n\t\t\treturn annotation.selector === 'block';\n\t\t} );\n\t},\n\t( state, blockClientId ) => [ state?.[ blockClientId ] ?? EMPTY_ARRAY ]\n);\n\nexport function __experimentalGetAllAnnotationsForBlock(\n\tstate,\n\tblockClientId\n) {\n\treturn state?.[ blockClientId ] ?? EMPTY_ARRAY;\n}\n\n/**\n * Returns the annotations that apply to the given RichText instance.\n *\n * Both a blockClientId and a richTextIdentifier are required. This is because\n * a block might have multiple `RichText` components. This does mean that every\n * block needs to implement annotations itself.\n *\n * @param {Object} state              Editor state.\n * @param {string} blockClientId      The client ID for the block.\n * @param {string} richTextIdentifier Unique identifier that identifies the given RichText.\n * @return {Array} All the annotations relevant for the `RichText`.\n */\nexport const __experimentalGetAnnotationsForRichText = createSelector(\n\t( state, blockClientId, richTextIdentifier ) => {\n\t\treturn ( state?.[ blockClientId ] ?? [] )\n\t\t\t.filter( ( annotation ) => {\n\t\t\t\treturn (\n\t\t\t\t\tannotation.selector === 'range' &&\n\t\t\t\t\trichTextIdentifier === annotation.richTextIdentifier\n\t\t\t\t);\n\t\t\t} )\n\t\t\t.map( ( annotation ) => {\n\t\t\t\tconst { range, ...other } = annotation;\n\n\t\t\t\treturn {\n\t\t\t\t\t...range,\n\t\t\t\t\t...other,\n\t\t\t\t};\n\t\t\t} );\n\t},\n\t( state, blockClientId ) => [ state?.[ blockClientId ] ?? EMPTY_ARRAY ]\n);\n\n/**\n * Returns all annotations in the editor state.\n *\n * @param {Object} state Editor state.\n * @return {Array} All annotations currently applied.\n */\nexport function __experimentalGetAnnotations( state ) {\n\treturn flatMap( state, ( annotations ) => {\n\t\treturn annotations;\n\t} );\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","/**\n * External dependencies\n */\nimport { v4 as uuid } from 'uuid';\n\n/**\n * @typedef WPAnnotationRange\n *\n * @property {number} start The offset where the annotation should start.\n * @property {number} end   The offset where the annotation should end.\n */\n\n/**\n * Adds an annotation to a block.\n *\n * The `block` attribute refers to a block ID that needs to be annotated.\n * `isBlockAnnotation` controls whether or not the annotation is a block\n * annotation. The `source` is the source of the annotation, this will be used\n * to identity groups of annotations.\n *\n * The `range` property is only relevant if the selector is 'range'.\n *\n * @param {Object}            annotation                    The annotation to add.\n * @param {string}            annotation.blockClientId      The blockClientId to add the annotation to.\n * @param {string}            annotation.richTextIdentifier Identifier for the RichText instance the annotation applies to.\n * @param {WPAnnotationRange} annotation.range              The range at which to apply this annotation.\n * @param {string}            [annotation.selector=\"range\"] The way to apply this annotation.\n * @param {string}            [annotation.source=\"default\"] The source that added the annotation.\n * @param {string}            [annotation.id]               The ID the annotation should have. Generates a UUID by default.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalAddAnnotation( {\n\tblockClientId,\n\trichTextIdentifier = null,\n\trange = null,\n\tselector = 'range',\n\tsource = 'default',\n\tid = uuid(),\n} ) {\n\tconst action = {\n\t\ttype: 'ANNOTATION_ADD',\n\t\tid,\n\t\tblockClientId,\n\t\trichTextIdentifier,\n\t\tsource,\n\t\tselector,\n\t};\n\n\tif ( selector === 'range' ) {\n\t\taction.range = range;\n\t}\n\n\treturn action;\n}\n\n/**\n * Removes an annotation with a specific ID.\n *\n * @param {string} annotationId The annotation to remove.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalRemoveAnnotation( annotationId ) {\n\treturn {\n\t\ttype: 'ANNOTATION_REMOVE',\n\t\tannotationId,\n\t};\n}\n\n/**\n * Updates the range of an annotation.\n *\n * @param {string} annotationId ID of the annotation to update.\n * @param {number} start        The start of the new range.\n * @param {number} end          The end of the new range.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalUpdateAnnotationRange(\n\tannotationId,\n\tstart,\n\tend\n) {\n\treturn {\n\t\ttype: 'ANNOTATION_UPDATE_RANGE',\n\t\tannotationId,\n\t\tstart,\n\t\tend,\n\t};\n}\n\n/**\n * Removes all annotations of a specific source.\n *\n * @param {string} source The source to remove.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalRemoveAnnotationsBySource( source ) {\n\treturn {\n\t\ttype: 'ANNOTATION_REMOVE_SOURCE',\n\t\tsource,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { register, createReduxStore } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\n\n/**\n * Module Constants\n */\nimport { STORE_NAME } from './constants';\n\n/**\n * Store definition for the annotations namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\treducer,\n\tselectors,\n\tactions,\n} );\n\nregister( store );\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","window","STORE_NAME","FORMAT_NAME","ANNOTATION_ATTRIBUTE_PREFIX","annotation","name","title","__","tagName","className","attributes","id","edit","__experimentalGetPropsForEditableTreePreparation","select","richTextIdentifier","blockClientId","annotations","__experimentalGetAnnotationsForRichText","__experimentalCreatePrepareEditableTree","formats","text","length","record","forEach","start","end","source","applyFormat","type","applyAnnotations","__experimentalGetPropsForEditableTreeChangeHandler","dispatch","removeAnnotation","__experimentalRemoveAnnotation","updateAnnotationRange","__experimentalUpdateAnnotationRange","__experimentalCreateOnChangeEditableValue","props","positions","characterFormats","i","filter","format","replace","retrieveAnnotationPositions","currentAnnotation","position","updateAnnotationsWithPositions","settings","registerFormatType","addFilter","OriginalComponent","withSelect","clientId","__experimentalGetAnnotationsForBlock","map","concat","Boolean","join","filterWithReference","collection","predicate","filteredCollection","isValidAnnotationRange","isNumber","LEAF_KEY","hasWeakMap","arrayOf","createCache","cache","clear","head","isShallowEqual","a","b","fromIndex","selector","getDependants","rootCache","getCache","WeakMap","callSelector","node","args","dependants","len","arguments","Array","apply","isUniqueByDependants","lastDependants","prev","next","val","dependant","caches","has","set","EMPTY_ARRAY","createSelector","state","__experimentalGetAllAnnotationsForBlock","range","other","__experimentalGetAnnotations","flatMap","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rng","Error","uuid","byteToHex","push","toString","substr","options","buf","offset","rnds","random","arr","undefined","toLowerCase","TypeError","__experimentalAddAnnotation","action","annotationId","__experimentalRemoveAnnotationsBySource","store","createReduxStore","reducer","newAnnotation","previousAnnotationsForBlock","mapValues","annotationsForBlock","hasChangedRange","newAnnotations","selectors","actions","register"],"sourceRoot":""}