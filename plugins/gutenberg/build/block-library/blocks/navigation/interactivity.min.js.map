{"version":3,"file":"./blocks/navigation/interactivity.min.js","mappings":"6HAKA,MAAMA,EAAqB,CAC1B,UACA,aACA,gEACA,4CACA,8CACA,4CACA,SACA,SACA,QACA,oBACA,oCAGDC,EAAAA,EAAAA,GAAO,CACNC,QAAS,CACRC,KAAM,CACLC,WAAY,CACXC,SAAU,EAAIC,UAASC,UACtB,GAAKD,EAAQH,KAAKC,WAAWI,WAAa,CACzC,MAAMC,EACLF,EAAIG,iBAAkBV,GACvBM,EAAQH,KAAKC,WAAWO,MAAQJ,EAChCD,EAAQH,KAAKC,WAAWQ,sBACvBH,EAAmB,GACpBH,EAAQH,KAAKC,WAAWS,qBACvBJ,EAAmBA,EAAkBK,OAAS,EAC/C,GAEFC,kBAAmB,EAAIT,UAASC,UAC1BD,EAAQH,KAAKC,WAAWI,YAC5BD,EAAIS,cACH,6CACCC,OACF,KAKLC,UAAW,CACVf,KAAM,CACLC,WAAY,CACXe,cAAe,EAAIb,aACXA,EAAQH,KAAKC,WAAWgB,SAC9Bd,EAAQH,KAAKC,WAAWI,WACtB,SACA,MAKPa,QAAS,CACRlB,KAAM,CACLC,WAAY,CACXkB,SAAU,EAAIhB,UAASC,UACtBD,EAAQH,KAAKC,WAAWI,YAAa,EACrCF,EAAQH,KAAKC,WAAWmB,cAAgBhB,EACnCD,EAAQH,KAAKC,WAAWgB,SAE5BI,SAASC,gBAAgBC,UAAUC,IAClC,iBAED,EAEFC,UAAW,EAAItB,cACTA,EAAQH,KAAKC,WAAWI,aAC5BF,EAAQH,KAAKC,WAAWI,YAAa,EAEpCF,EAAQH,KAAKC,WAAWO,MAAMkB,SAC7BC,OAAON,SAASO,gBAGjBzB,EAAQH,KAAKC,WAAWmB,cAAcN,QAEvCX,EAAQH,KAAKC,WAAWO,MAAQ,KAChCL,EAAQH,KAAKC,WAAWmB,cAAgB,KACnCjB,EAAQH,KAAKC,WAAWgB,SAC5BI,SAASC,gBAAgBC,UAAUM,OAClC,kBAGF,EAEFC,WAAY,EAAI3B,UAASe,UAASd,UAC5BD,EAAQH,KAAKC,WAAWI,WAC5Ba,EAAQlB,KAAKC,WAAWwB,UAAW,CAAEtB,YAErCe,EAAQlB,KAAKC,WAAWkB,SAAU,CAAEhB,UAASC,OAC7C,EAEF2B,kBAAmB,EAAIb,UAASf,UAAS6B,YACxC,GAAK7B,EAAQH,KAAKC,WAAWI,WAAa,CAEzC,GACgB,WAAf2B,GAAOC,KACY,KAAnBD,GAAOE,QAGP,YADAhB,EAAQlB,KAAKC,WAAWwB,UAAW,CAAEtB,aAMrCA,EAAQH,KAAKC,WAAWgB,SACR,QAAde,EAAMC,KAAmC,IAAlBD,EAAME,UAI9BF,EAAMG,UACNR,OAAON,SAASO,gBACfzB,EAAQH,KAAKC,WACXQ,uBAEHuB,EAAMI,iBACNjC,EAAQH,KAAKC,WAAWS,qBAAqBI,SAE3CkB,EAAMG,UACRR,OAAON,SAASO,gBACfzB,EAAQH,KAAKC,WAAWS,uBAEzBsB,EAAMI,iBACNjC,EAAQH,KAAKC,WAAWQ,sBAAsBK,SAGhD,GAEFuB,mBAAoB,EAAInB,UAASf,UAAS6B,YACpC7B,EAAQH,KAAKC,WAAWI,aAMzBF,EAAQH,KAAKC,WAAWO,MAAMkB,SAC/BM,EAAMM,gBAEPN,EAAMO,SAAWZ,OAAON,SAASO,eAEjCV,EAAQlB,KAAKC,WAAWwB,UAAW,CAAEtB,YAEtC,M","sources":["webpack://wp/./packages/block-library/src/navigation/interactivity.js"],"sourcesContent":["/**\n * Internal dependencies\n */\nimport { store } from '../utils/interactivity';\n\nconst focusableSelectors = [\n\t'a[href]',\n\t'area[href]',\n\t'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])',\n\t'select:not([disabled]):not([aria-hidden])',\n\t'textarea:not([disabled]):not([aria-hidden])',\n\t'button:not([disabled]):not([aria-hidden])',\n\t'iframe',\n\t'object',\n\t'embed',\n\t'[contenteditable]',\n\t'[tabindex]:not([tabindex^=\"-\"])',\n];\n\nstore( {\n\teffects: {\n\t\tcore: {\n\t\t\tnavigation: {\n\t\t\t\tinitMenu: ( { context, ref } ) => {\n\t\t\t\t\tif ( context.core.navigation.isMenuOpen ) {\n\t\t\t\t\t\tconst focusableElements =\n\t\t\t\t\t\t\tref.querySelectorAll( focusableSelectors );\n\t\t\t\t\t\tcontext.core.navigation.modal = ref;\n\t\t\t\t\t\tcontext.core.navigation.firstFocusableElement =\n\t\t\t\t\t\t\tfocusableElements[ 0 ];\n\t\t\t\t\t\tcontext.core.navigation.lastFocusableElement =\n\t\t\t\t\t\t\tfocusableElements[ focusableElements.length - 1 ];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfocusFirstElement: ( { context, ref } ) => {\n\t\t\t\t\tif ( context.core.navigation.isMenuOpen ) {\n\t\t\t\t\t\tref.querySelector(\n\t\t\t\t\t\t\t'.wp-block-navigation-item > *:first-child'\n\t\t\t\t\t\t).focus();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tselectors: {\n\t\tcore: {\n\t\t\tnavigation: {\n\t\t\t\troleAttribute: ( { context } ) => {\n\t\t\t\t\treturn context.core.navigation.overlay &&\n\t\t\t\t\t\tcontext.core.navigation.isMenuOpen\n\t\t\t\t\t\t? 'dialog'\n\t\t\t\t\t\t: '';\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tactions: {\n\t\tcore: {\n\t\t\tnavigation: {\n\t\t\t\topenMenu: ( { context, ref } ) => {\n\t\t\t\t\tcontext.core.navigation.isMenuOpen = true;\n\t\t\t\t\tcontext.core.navigation.previousFocus = ref;\n\t\t\t\t\tif ( context.core.navigation.overlay ) {\n\t\t\t\t\t\t// It adds a `has-modal-open` class to the <html> root\n\t\t\t\t\t\tdocument.documentElement.classList.add(\n\t\t\t\t\t\t\t'has-modal-open'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcloseMenu: ( { context } ) => {\n\t\t\t\t\tif ( context.core.navigation.isMenuOpen ) {\n\t\t\t\t\t\tcontext.core.navigation.isMenuOpen = false;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tcontext.core.navigation.modal.contains(\n\t\t\t\t\t\t\t\twindow.document.activeElement\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tcontext.core.navigation.previousFocus.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontext.core.navigation.modal = null;\n\t\t\t\t\t\tcontext.core.navigation.previousFocus = null;\n\t\t\t\t\t\tif ( context.core.navigation.overlay ) {\n\t\t\t\t\t\t\tdocument.documentElement.classList.remove(\n\t\t\t\t\t\t\t\t'has-modal-open'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttoggleMenu: ( { context, actions, ref } ) => {\n\t\t\t\t\tif ( context.core.navigation.isMenuOpen ) {\n\t\t\t\t\t\tactions.core.navigation.closeMenu( { context } );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactions.core.navigation.openMenu( { context, ref } );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\thandleMenuKeydown: ( { actions, context, event } ) => {\n\t\t\t\t\tif ( context.core.navigation.isMenuOpen ) {\n\t\t\t\t\t\t// If Escape close the menu\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tevent?.key === 'Escape' ||\n\t\t\t\t\t\t\tevent?.keyCode === 27\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tactions.core.navigation.closeMenu( { context } );\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Trap focus if it is an overlay (main menu)\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tcontext.core.navigation.overlay &&\n\t\t\t\t\t\t\t( event.key === 'Tab' || event.keyCode === 9 )\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// If shift + tab it change the direction\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tevent.shiftKey &&\n\t\t\t\t\t\t\t\twindow.document.activeElement ===\n\t\t\t\t\t\t\t\t\tcontext.core.navigation\n\t\t\t\t\t\t\t\t\t\t.firstFocusableElement\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tcontext.core.navigation.lastFocusableElement.focus();\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t! event.shiftKey &&\n\t\t\t\t\t\t\t\twindow.document.activeElement ===\n\t\t\t\t\t\t\t\t\tcontext.core.navigation.lastFocusableElement\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tcontext.core.navigation.firstFocusableElement.focus();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\thandleMenuFocusout: ( { actions, context, event } ) => {\n\t\t\t\t\tif ( context.core.navigation.isMenuOpen ) {\n\t\t\t\t\t\t// If focus is outside modal, and in the document, close menu\n\t\t\t\t\t\t// event.target === The element losing focus\n\t\t\t\t\t\t// event.relatedTarget === The element receiving focus (if any)\n\t\t\t\t\t\t// When focusout is outsite the document, `window.document.activeElement` doesn't change\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t! context.core.navigation.modal.contains(\n\t\t\t\t\t\t\t\tevent.relatedTarget\n\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\tevent.target !== window.document.activeElement\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tactions.core.navigation.closeMenu( { context } );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n} );\n"],"names":["focusableSelectors","store","effects","core","navigation","initMenu","context","ref","isMenuOpen","focusableElements","querySelectorAll","modal","firstFocusableElement","lastFocusableElement","length","focusFirstElement","querySelector","focus","selectors","roleAttribute","overlay","actions","openMenu","previousFocus","document","documentElement","classList","add","closeMenu","contains","window","activeElement","remove","toggleMenu","handleMenuKeydown","event","key","keyCode","shiftKey","preventDefault","handleMenuFocusout","relatedTarget","target"],"sourceRoot":""}